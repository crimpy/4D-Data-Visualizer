<?php
ob_start();
$conn = mysqli_connect('packertestcom.fatcowmysql.com', 'phpclient', '0r0g3n', 'modeloutput'); 
if (!$conn) { 
    die('Could not connect: ' . mysqli_error()); 
} 

$text = 'Select ' . $step .  'FROM '. $DBVal ;

$DDD = array();

$result = mysqli_query($conn,$text) or die(mysqli_error()); 

$count = 0;

$storeArray = Array();
while ($row = mysqli_fetch_array($result)) {
    $storeArray[] =  $row[0];  
}

for ($z = 0; $z <= 14; $z++) {	
	$tempA= '"';
	for ($y = 0; $y <= 40; $y++) {
		for ($x = 0; $x <= 35; $x++) {
	if($storeArray[$count]>=0){	
			$tempA = $tempA. (((36-$x)*50)-1000) .' '. ((($z+1) * 50) - 50) .' '. (($y * 50)-1000) .  ' '  . ($storeArray[$count] * $fac). ' ' ;
	}
	else
		{$garbage=0;}
            
			$count = $count +1;
		}
	}
	$tempA = $tempA. '"';
	$DDD[$z] = $tempA; 
}
echo "<!DOCTYPE HTML>\n"; 
echo "<html lang=\"en\">\n"; 
echo "	<head>\n"; 
echo "		<title>Voxels</title>\n"; 
echo "		<meta charset=\"utf-8\">\n"; 
echo "		<style type=\"text/css\">\n"; 
echo "			body {\n"; 
echo "				font-family: Monospace;\n"; 
echo "				font-size: 12px;\n"; 
echo "				background-color: #f0f0f0;\n"; 
echo "				margin: 0px;\n"; 
echo "				overflow: hidden;\n"; 
echo "				\n"; 
echo "			}\n"; 
echo "		</style>\n"; 
echo "	</head>\n"; 
echo "	<body>\n"; 
echo "\n"; 
echo "		<script type=\"text/javascript\" src=\"http://packertest.com/HeapVis/ThreeCanvas.js\"></script>\n"; 
echo "		<script type=\"text/javascript\" src=\"http://packertest.com/HeapVis/Cube.js\"></script>\n"; 
echo "		<script type=\"text/javascript\" src=\"http://packertest.com/HeapVis/Plane.js\"></script>\n"; 
echo "        \n"; 
echo "		<script type=\"text/javascript\">\n"; 
echo "\n"; 
echo "			var container, interval,\n"; 
echo "			camera, scene, renderer,\n"; 
echo "			projector, plane, cube, linesMaterial,\n"; 
echo "			color = 0, colors = [ 0x0033CC, 0x0099CC, 0x339999, 0x33CC66, 0x00CC33, 0x00CC00, 0x00FF33, 0x00FF66, 0x33FF66, 0x66FF66, 0x99FF00, 0x99FF66, 0xCCFF00, 0xFFFF00, 0xFFCC00, 0xCCCC00, 0xFF9900, 0xCC6600, 0xFF3300, 0xDDEEDD, 0xFF0000, 0xF7F5F5 ],\n"; 
echo "			ray, brush, objectHovered,\n"; 
echo "			mouse3D, isMouseDown = false, onMouseDownPosition,\n"; 
echo "			radious = 2500, theta = 15, onMouseDownTheta = 45, phi = 145, onMouseDownPhi = 60,\n"; 
echo "			isShiftDown = false;\n"; 
echo "\n"; 
echo "			init();\n"; 
echo "			render();\n"; 
echo "            \n"; 
echo "			makeHeap();\n"; 
echo "			\n"; 
echo "			function init() {\n"; 
echo "\n"; 
echo "				container = document.createElement( 'div' );\n"; 
echo "				document.body.appendChild( container );\n"; 
echo "\n"; 
echo "				var info = document.createElement( 'div' );\n"; 
echo "				info.style.position = 'absolute';\n"; 
echo "				info.style.top = '5px';\n"; 
echo "				info.style.width = '100%';\n"; 
echo "				info.style.textAlign = 'center';\n"; 
echo "				info.innerHTML = '<span style=\"color: #444; background-color: #fff; border-bottom: 1px solid #ddd; padding: 8px 10px; text-transform: uppercase;\"> <strong>Drag</strong>: rotate | <a href=\"javascript:save();\">save</a> </span>';\n"; 
echo "				container.appendChild( info );\n"; 
echo " \n"; 
echo "				camera = new THREE.Camera( 50, window.innerWidth / window.innerHeight, 1, 10000 );\n"; 
echo "				camera.position.x = radious * Math.sin( theta * Math.PI / 360 ) * Math.cos( phi * Math.PI / 360 );\n"; 
echo "				camera.position.y = radious * Math.sin( phi * Math.PI / 360 );\n"; 
echo "				camera.position.z = radious * Math.cos( theta * Math.PI / 360 ) * Math.cos( phi * Math.PI / 360 );\n"; 
echo "				camera.target.position.y = 150;\n"; 
echo "\n"; 
echo "				scene = new THREE.Scene();\n"; 
echo "\n"; 
echo "				// Grid\n"; 
echo "\n"; 
echo "				var geometry = new THREE.Geometry();\n"; 
echo "				geometry.vertices.push( new THREE.Vertex( new THREE.Vector3( - 1000, 0, 0 ) ) );\n"; 
echo "				geometry.vertices.push( new THREE.Vertex( new THREE.Vector3( 1000, 0, 0 ) ) );\n"; 
echo "\n"; 
echo "				linesMaterial = new THREE.LineColorMaterial( 0x000000, 0.2 );\n"; 
echo "\n"; 
echo "				for ( var i = 0; i <= 20; i ++ ) {\n"; 
echo "\n"; 
echo "					var line = new THREE.Line( geometry, linesMaterial );\n"; 
echo "					line.position.z = ( i * 50 ) - 500;\n"; 
echo "					scene.addObject( line );\n"; 
echo "\n"; 
echo "					var line = new THREE.Line( geometry, linesMaterial );\n"; 
echo "					line.position.x = ( i * 50 ) - 500;\n"; 
echo "					line.rotation.y = 90 * Math.PI / 180;\n"; 
echo "					scene.addObject( line );\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "				projector = new THREE.Projector();\n"; 
echo "\n"; 
echo "				plane = new THREE.Mesh( new Plane( 5000, 5000 ) );\n"; 
echo "				plane.rotation.x = - 90 * Math.PI / 180;\n"; 
echo "				scene.addObject( plane );\n"; 
echo "\n"; 
echo "				cube = new Cube( 50, 50, 50 );\n"; 
echo "\n"; 
echo "				ray = new THREE.Ray( camera.position, null );\n"; 
echo "\n"; 
echo "				brush = new THREE.Mesh( cube, new THREE.MeshColorFillMaterial( colors[ color ], 0) );//transparent brush cube\n"; 
echo "				brush.position.y = 2000;\n"; 
echo "				brush.overdraw = true;\n"; 
echo "				scene.addObject( brush );\n"; 
echo "\n"; 
echo "				onMouseDownPosition = new THREE.Vector2();\n"; 
echo "\n"; 
echo "				// Lights\n"; 
echo "\n"; 
echo "				var ambientLight = new THREE.AmbientLight( 0x404040 );\n"; 
echo "				scene.addLight( ambientLight );\n"; 
echo "\n"; 
echo "				var directionalLight = new THREE.DirectionalLight( 0xffffff );\n"; 
echo "				directionalLight.position.x = 1;\n"; 
echo "				directionalLight.position.y = 1;\n"; 
echo "				directionalLight.position.z = 0.75;\n"; 
echo "				directionalLight.position.normalize();\n"; 
echo "				scene.addLight( directionalLight );\n"; 
echo "\n"; 
echo "				var directionalLight = new THREE.DirectionalLight( 0x808080 );\n"; 
echo "				directionalLight.position.x = - 1;\n"; 
echo "				directionalLight.position.y = 1;\n"; 
echo "				directionalLight.position.z = - 0.5;\n"; 
echo "				directionalLight.position.normalize();\n"; 
echo "				scene.addLight( directionalLight );\n"; 
echo "\n"; 
echo "				renderer = new THREE.CanvasRenderer();\n"; 
echo "				renderer.setSize( window.innerWidth, window.innerHeight );\n"; 
echo "\n"; 
echo "				container.appendChild(renderer.domElement);\n"; 
echo "\n"; 
echo "				document.addEventListener( 'keydown', onDocumentKeyDown, false );\n"; 
echo "				document.addEventListener( 'keyup', onDocumentKeyUp, false );\n"; 
echo "\n"; 
echo "				document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n"; 
echo "				document.addEventListener( 'mousedown', onDocumentMouseDown, false );\n"; 
echo "				document.addEventListener( 'mouseup', onDocumentMouseUp, false );\n"; 
echo "\n"; 
echo "				//document.addEventListener( 'mousewheel', onDocumentMouseWheel, false );\n"; 
echo "\n"; 
echo "				if ( window.location.hash ) {\n"; 
echo "\n"; 
echo "					buildFromHash();\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function onDocumentKeyDown( event ) {\n"; 
echo "\n"; 
echo "				switch( event.keyCode ) {\n"; 
echo "\n"; 
echo "					case 49: setBrushColor( 0 ); break;\n"; 
echo "					case 50: setBrushColor( 1 ); break;\n"; 
echo "					case 51: setBrushColor( 2 ); break;\n"; 
echo "					case 52: setBrushColor( 3 ); break;\n"; 
echo "					case 53: setBrushColor( 4 ); break;\n"; 
echo "					case 54: setBrushColor( 5 ); break;\n"; 
echo "					case 55: setBrushColor( 6 ); break;\n"; 
echo "					case 56: setBrushColor( 7 ); break;\n"; 
echo "					case 57: setBrushColor( 8 ); break;\n"; 
echo "					case 48: setBrushColor( 9 ); break;\n"; 
echo "\n"; 
echo "					case 16: isShiftDown = true; interact(); render(); break;\n"; 
echo "\n"; 
echo "					case 37: offsetScene( - 1, 0 ); break;\n"; 
echo "					case 38: offsetScene( 0, - 1 ); break;\n"; 
echo "					case 39: offsetScene( 1, 0 ); break;\n"; 
echo "					case 40: offsetScene( 0, 1 ); break;\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function onDocumentKeyUp( event ) {\n"; 
echo "\n"; 
echo "				switch( event.keyCode ) {\n"; 
echo "\n"; 
echo "					case 16: isShiftDown = false; interact(); render(); break;\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function onDocumentMouseDown( event ) {\n"; 
echo "\n"; 
echo "				event.preventDefault();\n"; 
echo "\n"; 
echo "				isMouseDown = true;\n"; 
echo "\n"; 
echo "				onMouseDownTheta = theta;\n"; 
echo "				onMouseDownPhi = phi;\n"; 
echo "				onMouseDownPosition.x = event.clientX;\n"; 
echo "				onMouseDownPosition.y = event.clientY;\n"; 
echo "				//console.log(onMouseDownPosition.x);\n"; 
echo "				//console.log(onMouseDownPosition.y);\n"; 
echo "				//console.log(brush.position.z);\n"; 
echo "				\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function onDocumentMouseMove( event ) {\n"; 
echo "\n"; 
echo "				event.preventDefault();\n"; 
echo "\n"; 
echo "				if ( isMouseDown ) {\n"; 
echo "\n"; 
echo "					theta = - ( ( event.clientX - onMouseDownPosition.x ) * 0.5 ) + onMouseDownTheta;\n"; 
echo "					phi = ( ( event.clientY - onMouseDownPosition.y ) * 0.5 ) + onMouseDownPhi;\n"; 
echo "\n"; 
echo "					phi = Math.min( 180, Math.max( 0, phi ) );\n"; 
echo "\n"; 
echo "					camera.position.x = radious * Math.sin( theta * Math.PI / 360 ) * Math.cos( phi * Math.PI / 360 );\n"; 
echo "					camera.position.y = radious * Math.sin( phi * Math.PI / 360 );\n"; 
echo "					camera.position.z = radious * Math.cos( theta * Math.PI / 360 ) * Math.cos( phi * Math.PI / 360 );\n"; 
echo "					camera.updateMatrix();\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "				mouse3D = projector.unprojectVector( new THREE.Vector3( ( event.clientX / renderer.domElement.width ) * 2 - 1, - ( event.clientY / renderer.domElement.height ) * 2 + 1, 0.5 ), camera );\n"; 
echo "				ray.direction = mouse3D.subSelf( camera.position ).normalize();\n"; 
echo "\n"; 
echo "				interact();\n"; 
echo "				render();\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function onDocumentMouseUp( event ) {\n"; 
echo "\n"; 
echo "				event.preventDefault();\n"; 
echo "\n"; 
echo "				isMouseDown = false;\n"; 
echo "\n"; 
echo "				\n"; 
echo "\n"; 
echo "				if ( onMouseDownPosition.length() > 5 ) {\n"; 
echo "\n"; 
echo "					return;\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "				var intersect, intersects = ray.intersectScene( scene );\n"; 
echo "\n"; 
echo "				if ( intersects.length > 0 ) {\n"; 
echo "\n"; 
echo "					intersect = intersects[ 0 ].object == brush ? intersects[ 1 ] : intersects[ 0 ];\n"; 
echo "\n"; 
echo "					if ( intersect ) {\n"; 
echo "\n"; 
echo "						if ( isShiftDown ) {\n"; 
echo "\n"; 
echo "							if ( intersect.object != plane ) {\n"; 
echo "\n"; 
echo "								scene.removeObject( intersect.object );\n"; 
echo "\n"; 
echo "							}\n"; 
echo "\n"; 
echo "						} else {\n"; 
echo "\n"; 
echo "							var position = new THREE.Vector3().add( intersect.point, intersect.object.matrixRotation.transform( intersect.face.normal.clone() ) );\n"; 
echo "\n"; 
echo "							var voxel = new THREE.Mesh( cube, new THREE.MeshColorFillMaterial( colors[ color ] ) );\n"; 
echo "							voxel.position.x = Math.floor( position.x / 50 ) * 50 + 25;\n"; 
echo "							voxel.position.y = Math.floor( position.y / 50 ) * 50 + 25;\n"; 
echo "							voxel.position.z = Math.floor( position.z / 50 ) * 50 + 25;\n"; 
echo "							voxel.overdraw = true;\n"; 
echo "							scene.addObject( voxel );\n"; 
echo "\n"; 
echo "						}\n"; 
echo "\n"; 
echo "					}\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "				updateHash();\n"; 
echo "				interact();\n"; 
echo "				render();\n"; 
echo "\n"; 
echo "			}\n"; 
echo "///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////			\n"; 
echo "function makeHeap(){\n"; 
echo "	\n"; 
echo "var lay= [];\n"; 
echo "var ley = [];	\n"; 
echo "\n"; 
echo "//for(var g=0;g>=14;g++)\n"; 
echo "//}	\n"; 
echo "ley[0] =  " . $DDD[0] .  ";\n"; 
echo "ley[1] =  " . $DDD[1] .  ";\n"; 
echo "ley[2] =  " . $DDD[2] .  ";\n"; 
echo "ley[3] =  " . $DDD[3] .  ";\n"; 
echo "ley[4] =  " . $DDD[4] .  ";\n"; 
echo "ley[5] =  " . $DDD[5] .  ";\n"; 
echo "ley[6] =  " . $DDD[6] .  ";\n"; 
echo "ley[7] =  " . $DDD[7] .  ";\n"; 
echo "ley[8] =  " . $DDD[8] .  ";\n"; 
echo "ley[9] =  " . $DDD[9] .  ";\n"; 
echo "ley[10] = " . $DDD[10] . ";\n"; 
echo "ley[11] = " . $DDD[11] . ";\n"; 
echo "ley[12] = " . $DDD[12] . ";\n"; 
echo "ley[13] = " . $DDD[13] . ";\n"; 
echo "ley[14] = " . $DDD[14] . ";\n"; 
echo "\n"; 
echo "var count=0;\n"; 
echo "var len=0;\n"; 
echo "var Ncolor;\n"; 
echo "var bits =[]\n"; 
echo "var elm=[];\n"; 
echo "\n"; 
echo "for(p=0;p<=14;p++)\n"; 
echo "{\n"; 
echo "lay[p] =[];\n"; 
echo "bits[p] = ley[p].split(' ');\n"; 
echo "//console.log(bits[p].length);\n"; 
echo "elm[p] = Math.ceil((bits[p].length-1))/4;\n"; 
echo "count=0;\n"; 
echo "\n"; 
echo " for (i=0; i <= elm[p]; i++)\n"; 
echo " {    	lay[p][i]=[];\n"; 
echo " 		\n"; 
echo "	 for (j=0; j<=3; j++)\n"; 
echo "	 {   //console.log('count:' + count);;\n"; 
echo "	     lay[p][i][j] = bits[p][count];\n"; 
echo "		 //console.log('Array Val:' + lay[p][i][j]);\n"; 
echo "		 //console.log('bit value:' + bits[p][count]);\n"; 
echo "		 count = count + 1;\n"; 
echo "	 }	 \n"; 
echo " }  \n"; 
echo "}\n"; 
echo "\n"; 
echo "for (y=0;y<=14;y++)\n"; 
echo "{  	count=1;\n"; 
echo "	len = lay[y].length;\n"; 
echo "	\n"; 
echo "	for (x=1;x<=len-1;x++)\n"; 
echo "	{\n"; 
echo "			Rx =   lay[y][count][0] ;\n"; 
echo "			Ry =   lay[y][count][1] ;\n"; 
echo "			Rz =   lay[y][count][2] ;\n"; 
echo "			Rcol = lay[y][count][3] ;			\n"; 
echo "			if((Rcol<100)&&(Rcol>=78))\n"; 
echo "				{Ncolor=0;\n"; 
echo "				alpha=.3;\n"; 
echo "				}\n"; 
echo "			else if((Rcol<78)&&(Rcol>=72))\n"; 
echo "				{Ncolor=1;\n"; 
echo "				alpha=.3;\n"; 
echo "				}\n"; 
echo "			else if((Rcol<72)&&(Rcol>=68))\n"; 
echo "				{Ncolor=2;\n"; 
echo "				alpha=.3;\n"; 
echo "				}		\n"; 
echo "			else if((Rcol<68)&&(Rcol>=64))\n"; 
echo "				{Ncolor=3;\n"; 
echo "				alpha=.3;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<64)&&(Rcol>=61))\n"; 
echo "				{Ncolor=4;\n"; 
echo "				alpha=.3;\n"; 
echo "				}\n"; 
echo "			else if((Rcol<61)&&(Rcol>=57))\n"; 
echo "				{Ncolor=5;\n"; 
echo "				alpha=.3;\n"; 
echo "				}\n"; 
echo "			else if((Rcol<57)&&(Rcol>=53))\n"; 
echo "				{Ncolor=6;\n"; 
echo "				alpha=.3;\n"; 
echo "				}\n"; 
echo "			else if((Rcol<53)&&(Rcol>=49))\n"; 
echo "				{Ncolor=7;\n"; 
echo "				alpha=.3;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<49)&&(Rcol>=45))\n"; 
echo "				{Ncolor=8;\n"; 
echo "				alpha=.3;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<45)&&(Rcol>=41))\n"; 
echo "				{Ncolor=9;\n"; 
echo "				alpha=.3;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<41)&&(Rcol>=34))\n"; 
echo "				{Ncolor=10;\n"; 
echo "				alpha=.3;\n"; 
echo "				}\n"; 
echo "			else if((Rcol<34)&&(Rcol>=26))\n"; 
echo "				{Ncolor=11;\n"; 
echo "				alpha=.3;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<26)&&(Rcol>=22))\n"; 
echo "				{Ncolor=12;\n"; 
echo "				alpha=.3;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<22)&&(Rcol>=20))\n"; 
echo "				{Ncolor=13;\n"; 
echo "				alpha=.3;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<20)&&(Rcol>=16))\n"; 
echo "				{Ncolor=14;\n"; 
echo "				alpha=.3;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<16)&&(Rcol>=12))\n"; 
echo "				{Ncolor=15;\n"; 
echo "				alpha=.3;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<12)&&(Rcol>=8))\n"; 
echo "				{Ncolor=16;\n"; 
echo "				alpha=.3;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<8)&&(Rcol>=5))\n"; 
echo "				{Ncolor=17;\n"; 
echo "				alpha=.2;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<5)&&(Rcol>=1))\n"; 
echo "				{Ncolor=18;\n"; 
echo "				alpha=.1;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<1)&&(Rcol>=0.01))\n"; 
echo "				{Ncolor=19;\n"; 
echo "				alpha=.1;\n"; 
echo "				}	\n"; 
echo "			else if((Rcol<=0))\n"; 
echo "				{Ncolor=21;\n"; 
echo "				alpha=.1;\n"; 
echo "				}		\n"; 
echo "			else\n"; 
echo "				{Ncolor=21;\n"; 
echo "				alpha=.1;		\n"; 
echo "			}\n"; 
echo "			\n"; 
echo "			color=Ncolor;\n"; 
echo "		var voxel = new THREE.Mesh( cube, new THREE.MeshColorFillMaterial( colors[ color ],alpha ) );\n"; 
echo "							voxel.position.x = Math.floor( Rx / 50 ) * 50 + 25;\n"; 
echo "							voxel.position.y = Math.floor( Ry / 50 ) * 50 + 25;\n"; 
echo "							voxel.position.z = Math.floor( Rz / 50 ) * 50 + 25;\n"; 
echo "							voxel.overdraw = true;\n"; 
echo "							scene.addObject( voxel );\n"; 
echo "	\n"; 
echo "	count++;	\n"; 
echo "	}\n"; 
echo "	\n"; 
echo "}\n"; 
echo "\n"; 
echo "}\n"; 
echo "///////////////////////////////////////////////////////////////////////////////\n"; 
echo "\n"; 
echo "//function onDocumentMouseWheel( event ) {\n"; 
echo "\n"; 
echo "//				radious = event.wheelDeltaY;\n"; 
echo "\n"; 
echo "//				camera.position.x = radious * Math.sin( theta * Math.PI / 360 ) * Math.cos( phi * Math.PI / 360 );\n"; 
echo "//				camera.position.y = radious * Math.sin( phi * Math.PI / 360 );\n"; 
echo "//				camera.position.z = radious * Math.cos( theta * Math.PI / 360 ) * Math.cos( phi * Math.PI / 360 );\n"; 
echo "//				camera.updateMatrix();\n"; 
echo "\n"; 
echo "\n"; 
echo "//				interact();\n"; 
echo "//				render();\n"; 
echo "\n"; 
echo "//			}\n"; 
echo "\n"; ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
echo "			function setBrushColor( value ) {\n"; 
echo "\n"; 
echo "				color = value;\n"; 
echo "				brush.material[ 0 ].color.setHex( colors[ color ] ^ 0x4C000000 );\n"; 
echo "//console.log(value);\n"; 
echo "				render();\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function buildFromHash() {\n"; 
echo "\n"; 
echo "				var hash = window.location.hash.substr( 1 ),\n"; 
echo "				version = hash.substr( 0, 2 );\n"; 
echo "\n"; 
echo "				if ( version == \"A/\" ) {\n"; 
echo "\n"; 
echo "					var current = { x: 0, y: 0, z: 0, c: 0 }\n"; 
echo "					var data = decode( hash.substr( 2 ) );\n"; 
echo "					var i = 0, l = data.length;\n"; 
echo "\n"; 
echo "					while ( i < l ) {\n"; 
echo "\n"; 
echo "						var code = data[ i ++ ].toString( 2 );\n"; 
echo "\n"; 
echo "						if ( code.charAt( 1 ) == \"1\" ) current.x += data[ i ++ ] - 32;\n"; 
echo "						if ( code.charAt( 2 ) == \"1\" ) current.y += data[ i ++ ] - 32;\n"; 
echo "						if ( code.charAt( 3 ) == \"1\" ) current.z += data[ i ++ ] - 32;\n"; 
echo "						if ( code.charAt( 4 ) == \"1\" ) current.c += data[ i ++ ] - 32;\n"; 
echo "						if ( code.charAt( 0 ) == \"1\" ) {\n"; 
echo "\n"; 
echo "							var voxel = new THREE.Mesh( cube, new THREE.MeshColorFillMaterial( colors[ current.c ] ) );\n"; 
echo "							voxel.position.x = current.x * 50 + 25;\n"; 
echo "							voxel.position.y = current.y * 50 + 25;\n"; 
echo "							voxel.position.z = current.z * 50 + 25;\n"; 
echo "							voxel.overdraw = true;\n"; 
echo "							scene.addObject( voxel );\n"; 
echo "\n"; 
echo "						}\n"; 
echo "					}\n"; 
echo "\n"; 
echo "				} else {\n"; 
echo "\n"; 
echo "					var data = decode( hash );\n"; 
echo "\n"; 
echo "					for ( var i = 0; i < data.length; i += 4 ) {\n"; 
echo "\n"; 
echo "						var voxel = new THREE.Mesh( cube, new THREE.MeshColorFillMaterial( colors[ data[ i + 3 ] ] ) );\n"; 
echo "						voxel.position.x = ( data[ i ] - 20 ) * 25;\n"; 
echo "						voxel.position.y = ( data[ i + 1 ] + 1 ) * 25;\n"; 
echo "						voxel.position.z = ( data[ i + 2 ] - 20 ) * 25;\n"; 
echo "						voxel.overdraw = true;\n"; 
echo "						scene.addObject( voxel );\n"; 
echo "\n"; 
echo "					}\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "				updateHash();\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function updateHash() {\n"; 
echo "\n"; 
echo "				var data = [],\n"; 
echo "				current = { x: 0, y: 0, z: 0, c: 0 },\n"; 
echo "				last = { x: 0, y: 0, z: 0, c: 0 },\n"; 
echo "				code;\n"; 
echo "\n"; 
echo "				for ( var i in scene.objects ) {\n"; 
echo "\n"; 
echo "					object = scene.objects[ i ];\n"; 
echo "\n"; 
echo "					if ( object instanceof THREE.Mesh && object !== plane && object !== brush ) {\n"; 
echo "\n"; 
echo "						current.x = ( object.position.x - 25 ) / 50;\n"; 
echo "						current.y = ( object.position.y - 25 ) / 50;\n"; 
echo "						current.z = ( object.position.z - 25 ) / 50;\n"; 
echo "						current.c = colors.indexOf( object.material[ 0 ].color.hex & 0xffffff );\n"; 
echo "\n"; 
echo "						code = 0;\n"; 
echo "\n"; 
echo "						if ( current.x != last.x ) code += 1000;\n"; 
echo "						if ( current.y != last.y ) code += 100;\n"; 
echo "						if ( current.z != last.z ) code += 10;\n"; 
echo "						if ( current.c != last.c ) code += 1;\n"; 
echo "\n"; 
echo "						code += 10000;\n"; 
echo "\n"; 
echo "						data.push( parseInt( code, 2 ) );\n"; 
echo "\n"; 
echo "						if ( current.x != last.x ) {\n"; 
echo "\n"; 
echo "							data.push( current.x - last.x + 32 );\n"; 
echo "							last.x = current.x;\n"; 
echo "\n"; 
echo "						}\n"; 
echo "\n"; 
echo "						if ( current.y != last.y ) {\n"; 
echo "\n"; 
echo "							data.push( current.y - last.y + 32 );\n"; 
echo "							last.y = current.y;\n"; 
echo "\n"; 
echo "						}\n"; 
echo "\n"; 
echo "						if ( current.z != last.z ) {\n"; 
echo "\n"; 
echo "							data.push( current.z - last.z + 32 );\n"; 
echo "							last.z = current.z;\n"; 
echo "\n"; 
echo "						}\n"; 
echo "\n"; 
echo "						if ( current.c != last.c ) {\n"; 
echo "\n"; 
echo "							data.push( current.c - last.c + 32 );\n"; 
echo "							last.c = current.c;\n"; 
echo "\n"; 
echo "						}\n"; 
echo "\n"; 
echo "					}\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "				data = encode( data );\n"; 
echo "				window.location.hash = \"A/\" + data;\n"; 
echo "				document.getElementById( 'link' ).href = \"http://mrdoob.com/projects/voxels/#A/\" + data;\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function offsetScene( x, z ) {\n"; 
echo "\n"; 
echo "				var offset = new THREE.Vector3( x, 0, z ).multiplyScalar( 50 );\n"; 
echo "\n"; 
echo "				for ( var i in scene.objects ) {\n"; 
echo "\n"; 
echo "					object = scene.objects[ i ];\n"; 
echo "\n"; 
echo "					if ( object instanceof THREE.Mesh && object !== plane && object !== brush ) {\n"; 
echo "\n"; 
echo "						object.position.addSelf( offset );\n"; 
echo "\n"; 
echo "					}\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "				updateHash();\n"; 
echo "				interact();\n"; 
echo "				render();\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function interact() {\n"; 
echo "\n"; 
echo "				if ( objectHovered ) {\n"; 
echo "\n"; 
echo "					objectHovered.material[ 0 ].color.a = 1;\n"; 
echo "					objectHovered.material[ 0 ].color.updateStyleString();\n"; 
echo "					objectHovered = null;\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "				var position, intersect, intersects = ray.intersectScene( scene );\n"; 
echo "\n"; 
echo "				if ( intersects.length > 0 ) {\n"; 
echo "\n"; 
echo "					intersect = intersects[ 0 ].object != brush ? intersects[ 0 ] : intersects[ 1 ];\n"; 
echo "\n"; 
echo "					if ( intersect ) {\n"; 
echo "\n"; 
echo "						if ( isShiftDown ) {\n"; 
echo "\n"; 
echo "							if ( intersect.object != plane ) {\n"; 
echo "\n"; 
echo "								objectHovered = intersect.object;\n"; 
echo "								objectHovered.material[ 0 ].color.a = 0.5;\n"; 
echo "								objectHovered.material[ 0 ].color.updateStyleString();\n"; 
echo "\n"; 
echo "								return;\n"; 
echo "\n"; 
echo "							}\n"; 
echo "\n"; 
echo "						} else {\n"; 
echo "\n"; 
echo "							position = new THREE.Vector3().add( intersect.point, intersect.object.matrixRotation.transform( intersect.face.normal.clone() ) );\n"; 
echo "\n"; 
echo "							brush.position.x = Math.floor( position.x / 50 ) * 50 + 25;\n"; 
echo "							brush.position.y = Math.floor( position.y / 50 ) * 50 + 25;\n"; 
echo "							brush.position.z = Math.floor( position.z / 50 ) * 50 + 25;\n"; 
echo "\n"; 
echo "							return;\n"; 
echo "\n"; 
echo "						}\n"; 
echo "\n"; 
echo "					}\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "				brush.position.y = 2000;\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function render() {\n"; 
echo "\n"; 
echo "				renderer.render( scene, camera );\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function save() {\n"; 
echo "\n"; 
echo "				linesMaterial.color.setRGBA( 0, 0, 0, 0 );\n"; 
echo "				brush.position.y = 2000;\n"; 
echo "				render();\n"; 
echo "\n"; 
echo "				window.open( renderer.domElement.toDataURL('image/png'), 'mywindow' );\n"; 
echo "\n"; 
echo "				linesMaterial.color.setRGBA( 0, 0, 0, 0.2 );\n"; 
echo "				render();\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function clear() {\n"; 
echo "\n"; 
echo "				if ( !confirm( 'Are you sure?' ) ) {\n"; 
echo "\n"; 
echo "					return\n"; 
echo "\n"; 
echo "				}\n"; 
echo "\n"; 
echo "				window.location.hash = \"\";\n"; 
echo "\n"; 
echo "				var i = 0;\n"; 
echo "\n"; 
echo "				while ( i < scene.objects.length ) {\n"; 
echo "\n"; 
echo "					object = scene.objects[ i ];\n"; 
echo "\n"; 
echo "					if ( object instanceof THREE.Mesh && object !== plane && object !== brush ) {\n"; 
echo "\n"; 
echo "						scene.removeObject( object );\n"; 
echo "						continue;\n"; 
echo "					}\n"; 
echo "\n"; 
echo "					i ++;\n"; 
echo "				}\n"; 
echo "\n"; 
echo "				updateHash();\n"; 
echo "				render();\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			// https://gist.github.com/665235\n"; 
echo "\n"; 
echo "			function decode( string ) {\n"; 
echo "\n"; 
echo "				var output = [];\n"; 
echo "				string.split('').forEach( function ( v ) { output.push( \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf( v ) ); } );\n"; 
echo "				return output;\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "			function encode( array ) {\n"; 
echo "\n"; 
echo "				var output = \"\";\n"; 
echo "				array.forEach( function ( v ) { output += \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt( v ); } );\n"; 
echo "				return output;\n"; 
echo "\n"; 
echo "			}\n"; 
echo "\n"; 
echo "		</script>\n"; 
echo "\n"; 
echo "	</body>\n"; 
echo "</html>\n"; 
echo "\n";

file_put_contents('3D_out.html', ob_get_contents());
?>
